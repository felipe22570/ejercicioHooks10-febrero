{"version":3,"sources":["components/proyecto/CategoriasAdd.jsx","components/proyecto/Cards.jsx","components/proyecto/CategoriasList.jsx","components/proyecto/CategoriasApp.jsx","container/App.js","index.js"],"names":["CategoriasAdd","setSearch","useState","palabra","setPalabra","searchref","useRef","useEffect","current","focus","Form","onSubmit","e","preventDefault","Group","className","controlId","Label","Control","ref","type","placeholder","name","value","onChange","target","Cards","categoria","title","src","url","alt","CategoriasList","categorias","map","cate","index","CategoriasApp","setCategorias","search","imgGif","a","fetch","res","json","data","imgData","img","id","images","downsized_medium","then","Button","variant","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNA0CeA,EAtCO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtB,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWMC,EAAYC,mBAOlB,OALAC,qBAAU,WACPF,EAAUG,QAAQC,UAClB,IAIA,8BACG,cAACC,EAAA,EAAD,CAAMC,SAdS,SAACC,GACnBA,EAAEC,iBACFZ,EAAUE,IAYP,SACG,eAACO,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAAOC,UAAU,oBAAvC,UACG,cAACN,EAAA,EAAKO,MAAN,uBACA,cAACP,EAAA,EAAKQ,QAAN,CACGC,IAAKd,EACLe,KAAK,OACLC,YAAY,WACZC,KAAK,SACLC,MAAOpB,EACPqB,SA3BW,SAACZ,GACxBR,EAAWQ,EAAEa,OAAOF,kBCGXG,EATD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACd,OACG,gCACG,6BAAKA,EAAUC,QACf,qBAAKC,IAAKF,EAAUG,IAAKC,IAAI,eCUvBC,EAbQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACvB,OACG,gCACG,iDACCA,EAAWC,KAAI,SAACC,EAAMC,GAAP,OACb,6BACG,cAAC,EAAD,CAAOT,UAAWQ,KADZC,UCsCNC,EAzCO,WACnB,MAAoCnC,mBAAS,IAA7C,mBAAO+B,EAAP,KAAmBK,EAAnB,KACA,EAA4BpC,mBAAS,SAArC,mBAAOqC,EAAP,KAAetC,EAAf,KAMMuC,EAAM,uCAAG,oCAAAC,EAAA,6DACNX,EADM,iDAC0CS,EAD1C,+DAEMG,MAAMZ,GAFZ,cAENa,EAFM,gBAGWA,EAAIC,OAHf,uBAGJC,EAHI,EAGJA,KAEFC,EAAUD,EAAKX,KAAI,SAACa,GACvB,MAAO,CACJC,GAAID,EAAIC,GACRpB,MAAOmB,EAAInB,MACXE,IAAKiB,EAAIE,OAAOC,iBAAiBpB,QAT3B,kBAYLgB,GAZK,4CAAH,qDAmBZ,OAJAvC,qBAAU,WACPiC,IAASW,MAAK,SAACL,GAAD,OAAaR,EAAcQ,QACzC,CAACP,IAGD,gCACG,uDACA,cAAC,EAAD,CAAetC,UAAWA,IAC1B,6BACG,cAAC,EAAD,CAAgBgC,WAAYA,MAE/B,cAACmB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA9BV,WACnBhB,EAAc,GAAD,mBAAKL,GAAL,CAAiB,YA6B3B,yBC3BMsB,MARf,WACG,OACG,qBAAKxC,UAAU,MAAf,SACG,cAAC,EAAD,OCDTyC,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.ce1b01f1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst CategoriasAdd = ({ setSearch }) => {\r\n   const [palabra, setPalabra] = useState(\"\");\r\n\r\n   const handleInputChange = (e) => {\r\n      setPalabra(e.target.value);\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setSearch(palabra);\r\n   };\r\n\r\n   const searchref = useRef();\r\n\r\n   useEffect(() => {\r\n      searchref.current.focus()\r\n   }, [])\r\n   \r\n\r\n   return (\r\n      <div>\r\n         <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n               <Form.Label>Busqueda</Form.Label>\r\n               <Form.Control\r\n                  ref={searchref}\r\n                  type=\"text\"\r\n                  placeholder=\"Busqueda\"\r\n                  name=\"nombre\"\r\n                  value={palabra}\r\n                  onChange={handleInputChange}\r\n               />\r\n            </Form.Group>\r\n         </Form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CategoriasAdd;\r\n","import React from \"react\";\r\n\r\nconst Cards = ({ categoria }) => {\r\n   return (\r\n      <div>\r\n         <h3>{categoria.title}</h3>\r\n         <img src={categoria.url} alt=\"imagen\" />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nconst CategoriasList = ({ categorias }) => {\r\n   return (\r\n      <div>\r\n         <h1>Categorias List</h1>\r\n         {categorias.map((cate, index) => (\r\n            <li key={index}>\r\n               <Cards categoria={cate} />\r\n            </li>\r\n         ))}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CategoriasList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport CategoriasAdd from \"./CategoriasAdd\";\r\nimport CategoriasList from \"./CategoriasList\";\r\n\r\nconst CategoriasApp = () => {\r\n   const [categorias, setCategorias] = useState([]);\r\n   const [search, setSearch] = useState(\"happy\");\r\n\r\n   const handleAgregar = () => {\r\n      setCategorias([...categorias, \"Risas\"]);\r\n   };\r\n\r\n   const imgGif = async () => {\r\n      const url = `https://api.giphy.com/v1/gifs/search?q=${search}&limit=10&api_key=2MN7yT0MNbe14GVlpcAkCpvaOpBdIl0i`;\r\n      const res = await fetch(url);\r\n      const { data } = await res.json();\r\n\r\n      const imgData = data.map((img) => {\r\n         return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n         };\r\n      });\r\n      return imgData;\r\n   };\r\n\r\n   useEffect(() => {\r\n      imgGif().then((imgData) => setCategorias(imgData));\r\n   }, [search]);\r\n\r\n   return (\r\n      <div>\r\n         <h1>Componentes con Hooks</h1>\r\n         <CategoriasAdd setSearch={setSearch}/>\r\n         <ol>\r\n            <CategoriasList categorias={categorias} />\r\n         </ol>\r\n         <Button variant=\"primary\" onClick={handleAgregar}>\r\n            Agregar\r\n         </Button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default CategoriasApp;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport CategoriasApp from \"../components/proyecto/CategoriasApp\";\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"App\">\r\n         <CategoriasApp />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./container/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <App />\r\n   </React.StrictMode>,\r\n   document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}